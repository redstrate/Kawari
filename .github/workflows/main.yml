name: Main

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-webassembly:
    name: "Build (WebAssembly)"
    runs-on: ubuntu-latest
    # Skip running on PR events that come from the same repository, it will just duplicate the branch action
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name

    steps:
    - uses: actions/checkout@v4
    - name: Add WebAssembly Target
      run: |
        rustup target add wasm32-unknown-unknown
    - uses: actions/cache@v4
      id: cache-deps
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --release --verbose --target=wasm32-unknown-unknown --lib

  build:
    name: "Build"
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - run: |
        cargo install --git https://github.com/rust-lang/mdBook.git mdbook
    - uses: actions/cache@v4
      id: cache-deps
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: robinraju/release-downloader@v1
      if: runner.os == 'Linux'
      with:
        repository: 'WorkingRobot/OodleUE'
        fileName: 'gcc.zip'
        latest: true
        extract: true
    - if: runner.os == 'Linux'
      run: |
        mkdir oodle
        cp lib/Release/liboodle-network-shared.so oodle/
    - uses: robinraju/release-downloader@v1
      if: runner.os == 'Windows'
      with:
        repository: 'WorkingRobot/OodleUE'
        fileName: 'clang-cl.zip'
        latest: true
        extract: true
    - if: runner.os == 'Windows'
      run: |
        mkdir oodle
        cp ar/Release/oodle-network-shared.lib oodle/
    - name: Build
      run: cargo build --release --verbose --features oodle
    - name: Run clippy
      if: runner.os == 'Linux'
      run: cargo clippy --features oodle
    - name: Run tests
      run: cargo test --verbose
    - name: Build documentation
      run: |
        mdbook build --dest-dir=doc-build ./doc
        mv doc doc-1
        mv doc-build doc
    - name: Prepare artifacts
      if: runner.os == 'Windows'
      run: |
        mv target/release/* .
        mv scripts/run_artifacts_windows.bat run.bat
        echo "${{ github.sha }}" >> version.txt
    - name: Prepare artifacts
      if: runner.os == 'Linux'
      run: |
        mv target/release/* .
        mv scripts/run_artifacts_linux.sh run.sh
        echo "${{ github.sha }}" >> version.txt
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Kawari-${{ runner.os }}
        path: |
          LICENSE
          USAGE.md
          README.md
          kawari-admin*
          kawari-frontier*
          kawari-lobby*
          kawari-login*
          kawari-patch*
          kawari-web*
          kawari-world*
          kawari-launcher*
          kawari-savedatabank*
          !*.d
          resources/
          !resources/data/tests
          !resources/data/opcodes.json
          run.sh
          run.bat
          version.txt
          doc/
          !doc/src/
          !doc/book.toml

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Download artifact
      uses: dawidd6/action-download-artifact@v11
      with:
        skip_unpack: true
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        printf "Host ryne.moe\nPort 38901\nStrictHostKeyChecking no" >> ~/.ssh/config
        chmod 700 ~/.ssh
        chmod 600 ~/.ssh/id_rsa
        chmod 644 ~/.ssh/config
    - name: Upload artifacts
      run: |
        rsync --recursive "Kawari-Linux.zip" deploy@ryne.moe:/srv/http/astra-distrib/kawari/
        rsync --recursive "Kawari-Windows.zip" deploy@ryne.moe:/srv/http/astra-distrib/kawari/

